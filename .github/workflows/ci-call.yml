name: Workflow Base

on:
  workflow_call:
    inputs:
      runs-on:
        description: The OS to run on
        type: string
        default: ubuntu-latest
        required: false
      dotnet-verbosity:
        description: The log verbosity of dotnet commands
        type: string
        default: minimal
        required: false
      configuration:
        description: The configuration to build
        type: string
        default: Release
        required: false
      package:
        description: Whether to pack and upload as an artifact
        type: boolean
        default: false
        required: false
      upload-coverage:
        description: Whether to upload code coverage
        type: boolean
        default: false
        required: false
      upload-coverage-verbose:
        description: Whether to enable verbose output for upload-coverage
        type: boolean
        default: false
        required: false

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    outputs:
      prerelease-version: ${{ steps.nbgv.outputs.PrereleaseVersion }}
      tag-name: v${{ steps.nbgv.outputs.NuGetPackageVersion }}
    steps:
      - name: 🧺 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
      - name: 🏭 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json
        env:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      - name: 🔢 Nerdbank.GitVersioning
        uses: dotnet/nbgv@v0.4.2
        with:
          setCommonVars: true
        id: nbgv
      - name: ⚒️ Restore
        run: dotnet restore
      - name: ⚒️ Build
        run: dotnet build --configuration ${{ inputs.configuration }} --no-restore --verbosity ${{ inputs.dotnet-verbosity }} /p:ContinuousIntegrationBuild=true
      - name: 🧪 Test
        if: ${{ !inputs.upload-coverage }}
        run: dotnet test --configuration ${{ inputs.configuration }} --no-restore --no-build --verbosity ${{ inputs.dotnet-verbosity }}
      - name: 🧪 Test With Coverage
        if: ${{ inputs.upload-coverage }}
        run: dotnet test --configuration ${{ inputs.configuration }} --no-restore --no-build --verbosity ${{ inputs.dotnet-verbosity }} /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: 🗣️ Print Public Release
        if: ${{ inputs.package }}
        run: echo ${{ steps.nbgv.outputs.PublicRelease }}
      - name: 📦 Pack
        if: ${{ inputs.package }}
        run: dotnet pack --configuration ${{ inputs.configuration }} --no-restore --no-build --verbosity ${{ inputs.dotnet-verbosity }} --output nupkg
      - name: 📦 Write Nuget Version
        if: ${{ inputs.package }}
        run: echo ${{ steps.nbgv.outputs.NuGetPackageVersion }} > ./nupkg/version.txt
      - name: 🌐 Upload Artifact
        if: ${{ inputs.package }}
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: ./nupkg/*
      - name: 🌐 Upload Code Coverage
        if: ${{ inputs.upload-coverage }}
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false # optional (default = false)
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: ${{ inputs.upload-coverage-verbose }} # optional (default = false)
